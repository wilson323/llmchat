import type { Request, Response, NextFunction } from 'express';
import logger from '../utils/logger';

// Â∏∏ÈáèÂÆö‰πâ
const LOGGER_CONSTANTS = {
  HTTP_STATUS_ERROR_THRESHOLD: 400,
} as const;

/**
 * ËØ∑Ê±ÇÊó•Âøó‰∏≠Èó¥‰ª∂
 */
export const requestLogger = (
  req: Request,
  res: Response,
  next: NextFunction,
): void => {
  const startTime = Date.now();
  const { method, url, ip } = req;

  // ËÆ∞ÂΩïËØ∑Ê±ÇÂºÄÂßã
  logger.debug('üìù HTTPËØ∑Ê±Ç', { method, url, ip, timestamp: new Date().toISOString() });

  // ÁõëÂê¨ÂìçÂ∫îÂÆåÊàê
  res.on('finish', () => {
    const duration = Date.now() - startTime;
    const { statusCode } = res;

    // Ê†πÊçÆÁä∂ÊÄÅÁ†ÅÈÄâÊã©Êó•ÂøóÁ∫ßÂà´
    const logLevel = statusCode >= LOGGER_CONSTANTS.HTTP_STATUS_ERROR_THRESHOLD ? '‚ùå' : '‚úÖ';

    logger.debug(
      `${logLevel} [${new Date().toISOString()}] ${method} ${url} - ${statusCode} - ${duration}ms`,
    );
  });

  next();
};