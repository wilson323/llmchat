# ========================================
# 🔐 LLMChat 统一配置模板
# ========================================
#
# ⚠️ 重要安全提醒：
# 1. 复制此文件为 .env 并填写真实值
# 2. 绝对不要将 .env 文件提交到版本控制系统
# 3. 请确保 .env 已添加到 .gitignore 中
# 4. 生产环境请使用强密码和安全的密钥
# 5. 定期轮换 API 密钥和访问令牌
#
# 📋 配置说明：
# - 所有服务配置统一在此文件管理
# - 开发环境使用本地服务（localhost）
# - 生产环境通过环境变量覆盖
# - 测试环境使用独立配置（TEST_ 前缀）

# ========================================
# 🖥️ 应用基础配置
# ========================================
NODE_ENV=development

# 后端端口（实际运行端口）
PORT=3005

# 前端地址（用于CORS配置）
# 前端实际运行在 3004 端口（vite.config.ts配置）
FRONTEND_URL=http://localhost:3004

# 智能体配置文件路径（相对于项目根目录）
AGENTS_CONFIG_PATH=./config/agents.json

# ========================================
# 🗄️ PostgreSQL 数据库配置
# ========================================
# 开发环境数据库配置（根据实际运行日志）
DB_HOST=171.43.138.237
DB_PORT=5443
DB_USER=postgres
DB_PASSWORD=your_secure_password_here
DB_NAME=llmchat
DB_SSL=false

# 数据库连接池配置
DB_POOL_MIN=2
DB_POOL_MAX=10

# 数据库连接字符串（可选，自动拼接）
# DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}

# ========================================
# 🔴 Redis 配置
# ========================================
# 开发环境 - 本地 Redis
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_KEY_PREFIX=llmchat:queue:

# Redis 连接池配置（高并发优化）
REDIS_MAX_CONNECTIONS=100
REDIS_MIN_CONNECTIONS=20
REDIS_ACQUIRE_TIMEOUT_MS=10000

# Redis 连接字符串（可选，自动拼接）
# REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}

# ========================================
# 🧪 测试环境配置
# ========================================
# 测试环境使用独立配置，避免污染开发数据
TEST_DB_HOST=localhost
TEST_DB_PORT=5432
TEST_DB_USER=postgres
TEST_DB_PASSWORD=123456
TEST_DB_NAME=llmchat_test
TEST_DB_SSL=false

TEST_REDIS_HOST=localhost
TEST_REDIS_PORT=6379
TEST_REDIS_PASSWORD=
TEST_REDIS_DB=1
TEST_REDIS_KEY_PREFIX=llmchat:test:queue:

# ========================================
# 🔑 JWT 认证配置
# ========================================
# JWT 令牌密钥（生产环境必须使用强密钥，至少64字符）
JWT_SECRET=your_super_secure_jwt_secret_key_here_minimum_64_characters_long_for_production_use
JWT_EXPIRES_IN=7d
JWT_REFRESH_EXPIRES_IN=30d

# Token 有效期（秒）
TOKEN_TTL=604800
REFRESH_TOKEN_TTL=2592000

# ========================================
# 🔐 API 访问控制
# ========================================
API_ACCESS_TOKEN=your_api_access_token_here
API_KEY_HEADER_NAME=x-api-key

# CORS 安全配置
CORS_ORIGIN=http://localhost:3000
CORS_CREDENTIALS=true

# ========================================
# 🤖 FastGPT 智能体配置
# ========================================
# 智能体 1 - 熵犇犇售后服务助手
FASTGPT_AGENT_ID_1=agent-1
FASTGPT_APP_ID_1=your_app_id_here
FASTGPT_AGENT_NAME_1=熵犇犇售后服务助手
FASTGPT_AGENT_DESCRIPTION_1=基于 FastGPT 的知识库问答助手
FASTGPT_ENDPOINT_1=http://your-fastgpt-server:3000/api/v1/chat/completions
FASTGPT_API_KEY_1=fastgpt-your_api_key_here
FASTGPT_MODEL_1=FastAI-4k
FASTGPT_RATE_LIMIT_RPM_1=60
FASTGPT_RATE_LIMIT_TPM_1=40000

# 智能体 2 - 配单智能应用
FASTGPT_AGENT_ID_2=agent-2
FASTGPT_APP_ID_2=your_app_id_here
FASTGPT_AGENT_NAME_2=配单智能应用
FASTGPT_AGENT_DESCRIPTION_2=基于 FastGPT 的配单助手
FASTGPT_ENDPOINT_2=http://your-fastgpt-server:3000/api/v1/chat/completions
FASTGPT_API_KEY_2=fastgpt-your_api_key_here
FASTGPT_MODEL_2=FastAI-4k
FASTGPT_RATE_LIMIT_RPM_2=60
FASTGPT_RATE_LIMIT_TPM_2=40000

# 智能体 3 - 需求分析
FASTGPT_AGENT_ID_3=agent-3
FASTGPT_APP_ID_3=your_app_id_here
FASTGPT_AGENT_NAME_3=需求分析
FASTGPT_AGENT_DESCRIPTION_3=基于 FastGPT 的需求分析助手
FASTGPT_ENDPOINT_3=http://your-fastgpt-server:3000/api/v1/chat/completions
FASTGPT_API_KEY_3=fastgpt-your_api_key_here
FASTGPT_MODEL_3=FastAI-4k
FASTGPT_RATE_LIMIT_RPM_3=60
FASTGPT_RATE_LIMIT_TPM_3=40000

# ========================================
# 📝 日志配置
# ========================================
LOG_LEVEL=info
LOG_DIR=./log
LOG_FORMAT=json

# 可选：HTTP 日志导出配置
# LOG_EXPORT_HTTP_ENDPOINT=https://observer.internal/api/logs
# LOG_EXPORT_HTTP_HEADERS={"Authorization":"Bearer your_token"}
# LOG_EXPORT_HTTP_BATCH=25
# LOG_EXPORT_HTTP_INTERVAL=2000

# 安全日志配置
SECURITY_LOG_ENABLED=true
SECURITY_LOG_FILE=logs/security.log
AUDIT_LOG_ENABLED=true
AUDIT_LOG_FILE=logs/audit.log
AUDIT_LOG_RETENTION_DAYS=90

# ========================================
# ⚡ 性能和限制配置
# ========================================
# 请求超时时间（毫秒）
REQUEST_TIMEOUT=30000

# 速率限制配置
RATE_LIMIT_POINTS=1000
RATE_LIMIT_DURATION=60
RATE_LIMIT_BLOCK_DURATION=60
RATE_LIMIT_MAX_REQUESTS=1000
RATE_LIMIT_WINDOW_MS=60000

# 队列并发配置
QUEUE_CONCURRENCY=3

# 熔断器配置
CIRCUIT_BREAKER_FAILURE_THRESHOLD=5
CIRCUIT_BREAKER_SUCCESS_THRESHOLD=3
CIRCUIT_BREAKER_TIMEOUT=10000
CIRCUIT_BREAKER_RESET_TIMEOUT=30000

# 重试配置
RETRY_MAX_RETRIES=3
RETRY_BASE_DELAY=1000
RETRY_MAX_DELAY=10000
RETRY_BACKOFF_FACTOR=2
RETRY_ENABLE_JITTER=true

# 降级配置
FALLBACK_ENABLED=true
FALLBACK_CACHE_TTL=300000
FALLBACK_MAX_CACHE_SIZE=100

# ========================================
# 📊 监控和告警配置
# ========================================
MONITORING_ENABLED=true
MONITORING_METRICS_INTERVAL=60000
MONITORING_HEALTH_CHECK_INTERVAL=60000
MONITORING_SLA_UPDATE_INTERVAL=60000

# 告警配置
ALERT_CONSOLE_ENABLED=true
ALERT_WEBHOOK_ENABLED=false
ALERT_WEBHOOK_URL=
ALERT_EMAIL_ENABLED=false
ALERT_EMAIL_SMTP_HOST=
ALERT_EMAIL_SMTP_PORT=587
ALERT_EMAIL_USERNAME=
ALERT_EMAIL_PASSWORD=
ALERT_EMAIL_FROM=
ALERT_EMAIL_TO=

# ========================================
# 🔧 第三方服务配置
# ========================================
# 阿里云图片生成服务
ALIYUN_IMAGE_API_URL=https://dashscope.aliyuncs.com/api/v1/services/aigc/image-generation/generation
ALIYUN_IMAGE_API_KEY=your_aliyun_api_key_here
ALIYUN_IMAGE_MODEL=wanx-stylepro-v1

# 可选：工作空间 ID
# ALIYUN_WORKSPACE_ID=

# ========================================
# 🔒 生产环境安全配置
# ========================================
# 生产环境请取消注释并配置：

# 强制 HTTPS
# FORCE_HTTPS=true

# 安全头配置
# HELMET_ENABLED=true
# CSP_ENABLED=true

# 请求大小限制
# REQUEST_SIZE_LIMIT=10mb

# IP 白名单（可选）
# IP_WHITELIST=127.0.0.1,::1

# 禁用服务器信息泄露
# DISABLE_X_POWERED_BY=true

# ========================================
# 📋 配置检查清单
# ========================================
# 部署前请确认：
# [ ] 所有必需的环境变量都已设置
# [ ] 数据库连接信息正确
# [ ] Redis 连接信息正确
# [ ] JWT 密钥足够强壮（生产环境至少64字符）
# [ ] API 密钥已正确配置
# [ ] 日志目录有写入权限
# [ ] 生产环境使用 HTTPS
# [ ] 防火墙规则正确配置
# [ ] 监控告警已配置
# [ ] 安全扫描已通过
