{
    "name": "llmchat",
    "version": "1.0.0",
    "private": true,
    "description": "LLMChat - 多智能体切换聊天应用",
    "scripts": {
        "dev": "concurrently \"pnpm run backend:dev\" \"pnpm run frontend:dev\"",
        "backend:dev": "cd backend && pnpm run dev",
        "frontend:dev": "cd frontend && pnpm run dev",
        "build": "pnpm run backend:build && pnpm run frontend:build",
        "backend:build": "cd backend && pnpm run build",
        "frontend:build": "cd frontend && pnpm run build",
        "frontend:preview": "cd frontend && pnpm run preview",
        "start": "cd backend && pnpm start",
        "test": "pnpm run backend:test && pnpm run frontend:test",
        "backend:test": "cd backend && pnpm test",
        "frontend:test": "cd frontend && pnpm run test:run",
        "lint": "pnpm run backend:lint && pnpm run frontend:lint",
        "lint:fix": "pnpm run backend:lint:fix && pnpm run frontend:lint:fix",
        "backend:lint": "cd backend && pnpm run lint",
        "backend:lint:fix": "cd backend && pnpm run lint:fix",
        "frontend:lint": "cd frontend && pnpm run lint",
        "frontend:lint:fix": "cd frontend && pnpm run lint:fix",
        "type-check": "pnpm --filter @llmchat/shared-types build && pnpm run frontend:type-check",
        "frontend:type-check": "cd frontend && pnpm run type-check",
        "install:all": "pnpm install",
        "test:e2e": "playwright test",
        "test:e2e:ui": "playwright test --ui",
        "test:e2e:debug": "playwright test --debug",
        "test:perf": "npx ts-node tests/performance/benchmark.ts",
        "test:perf:quick": "npx ts-node tests/performance/quick-test.ts",
        "test:perf:stress": "npx artillery run tests/performance/artillery.yml",
        "prepare": "husky install",
        "security:audit": "./scripts/security-audit.sh",
        "security:check": "node scripts/pre-commit-security-check.js",
        "security:config": "cd backend && ts-node src/scripts/secure-config-manager.ts",
        "enterprise:fix": "cd backend && ts-node src/scripts/enterprise-code-fixer.ts",
        "enterprise:fix:interactive": "cd backend && ts-node src/scripts/enterprise-code-fixer.ts --mode fix",
        "enterprise:fix:auto": "cd backend && ts-node src/scripts/enterprise-code-fixer.ts --mode auto-fix",
        "pre-commit": "lint-staged && pnpm run pre-commit-quality",
        "pre-commit-check": "pnpm run type-check && pnpm run lint && pnpm run security:check",
        "quality-check": "node scripts/quality-check.mjs",
        "quality-gates": "node scripts/enhanced-quality-gates.js",
        "quality-gates:pre-commit": "node scripts/enhanced-quality-gates.js --pre-commit",
        "quality-gates:strict": "node scripts/enhanced-quality-gates.js --strict",
        "quality-check:pre-commit": "node scripts/quality-check.mjs --pre-commit",
        "quality-monitor": "node scripts/quality-monitor.js",
        "quality-trend": "node scripts/quality-trend-tracker.js",
        "quality-report": "node scripts/quality-monitor.js && node scripts/quality-trend-tracker.js",
        "quality-gates:pre-push": "node scripts/enhanced-quality-gates.js --pre-push",
        "quality-gates:ci": "node scripts/enhanced-quality-gates.js --ci-mode",
        "type-safety:check": "npx ts-node scripts/type-safety-check.ts",
        "type-safety:check:strict": "npx ts-node scripts/type-safety-check.ts --strict",
        "type-safety:check:ci": "npx ts-node scripts/type-safety-check.ts --ci-mode",
        "type-safety:check:auto-fix": "npx ts-node scripts/type-safety-check.ts --auto-fix",
        "type-safety:fix": "npx ts-node scripts/fix-optional-access.ts",
        "type-safety:fix:quick": "npx ts-node scripts/fix-optional-access.ts --no-backup",
        "type-safety:benchmark": "npx ts-node tests/performance/type-safety.bench.ts",
        "type-safety:report": "npx ts-node scripts/type-safety-reporter.ts",
        "type-safety:report:daily": "npx ts-node scripts/type-safety-reporter.ts --daily",
        "type-safety:dashboard": "node scripts/typescript-dashboard.js",
        "type-safety:dashboard:serve": "node scripts/typescript-dashboard.js --serve",
        "type-safety:monitor": "node scripts/typescript-safety-monitor.js",
        "type-safety:monitor:ci": "node scripts/typescript-safety-monitor.js --mode ci --quiet",
        "type-safety:zero-errors": "npx ts-node scripts/type-safety-check.ts --strict && npx ts-node scripts/type-safety-reporter.ts",
        "type-safety:full-check": "npx ts-node scripts/type-safety-check.ts --strict && npx ts-node scripts/fix-optional-access.ts && npx ts-node scripts/type-safety-reporter.ts",
        "quality-gates:thresholds": "node scripts/enhanced-quality-gates.js --thresholds",
        "quality-dashboard": "node scripts/quality-dashboard.js",
        "quality-dashboard:serve": "node scripts/quality-dashboard.js --serve",
        "quality-metrics": "node scripts/quality-metrics.js",
        "quality-metrics:ci": "node scripts/quality-metrics.js --ci",
        "pre-commit-quality": "pnpm run type-safety:check:strict && pnpm run lint && pnpm run test && pnpm run security:audit && pnpm run quality-metrics",
        "validate:quality": "pnpm run type-safety:check:strict && pnpm run lint && pnpm run test && pnpm run security:audit && pnpm run quality-metrics",
        "validate:type-safety": "pnpm run type-safety:full-check && pnpm run type-safety:benchmark",
        "quality-dashboard:watch": "node scripts/quality-dashboard.js --serve --watch",
        "quality-improvement": "node scripts/continuous-improvement.js",
        "quality-improvement:update": "node scripts/continuous-improvement.js --update",
        "quality-improvement:report": "node scripts/continuous-improvement.js --report-only",
        "security:sanitize": "pnpm run security:audit && pnpm run security:check",
        "enterprise:rules": "node -e \"console.log('📋 企业级规则: 禁止正则表达式代码替换，使用AST操作'); console.log('📖 详情: .enterprise-code-rules.md')\"",
        "enterprise:validate": "node -e \"try { const config = require('./.enterprise-code-fixer.config.json'); console.log('✅ 企业级配置验证通过'); } catch(e) { console.error('❌ 配置验证失败:', e.message); process.exit(1); }\"",
        "enterprise:score": "node scripts/enterprise-quality-scoring.js --format all --verbose",
        "enterprise:score:ci": "node scripts/enterprise-quality-scoring.js --format json --environment production",
        "test-coverage:monitor": "node scripts/test-coverage-monitor.js --format all --verbose",
        "test-coverage:monitor:ci": "node scripts/test-coverage-monitor.js --format json --threshold 85 --environment production",
        "test-coverage:badge": "node scripts/test-coverage-monitor.js --format json && cp coverage-reports/coverage-badge.svg ./",
        "ci:enterprise-quality": "pnpm run enterprise:score:ci && pnpm run test-coverage:monitor:ci",
        "deployment:manager": "node scripts/deployment-manager.js",
        "deployment:staging": "node scripts/deployment-manager.js --environment staging --strategy blue-green --verbose",
        "deployment:production": "node scripts/deployment-manager.js --environment production --strategy blue-green --verbose",
        "deployment:canary": "node scripts/deployment-manager.js --environment production --strategy canary --verbose",
        "deployment:rollback": "node scripts/deployment-manager.js --environment production --rollback --verbose",
        "deployment:dry-run": "node scripts/deployment-manager.js --environment production --dry-run --verbose",
        "security:scan": "node scripts/security-scan-manager.js --format all --verbose",
        "security:scan:ci": "node scripts/security-scan-manager.js --format json --environment production",
        "ci:full": "pnpm run ci:enterprise-quality && pnpm run security:scan:ci && pnpm run deployment:dry-run",
        "validate:docs": "node scripts/spec-validation/validate-consistency.js && node scripts/spec-validation/check-coverage.js && node scripts/spec-validation/detect-ambiguity.js && node scripts/spec-validation/verify-references.js",
        "validate:docs:consistency": "node scripts/spec-validation/validate-consistency.js",
        "validate:docs:coverage": "node scripts/spec-validation/check-coverage.js",
        "validate:docs:ambiguity": "node scripts/spec-validation/detect-ambiguity.js",
        "validate:docs:references": "node scripts/spec-validation/verify-references.js"
    },
    "devDependencies": {
        "@playwright/test": "^1.40.0",
        "chalk": "^5.6.2",
        "concurrently": "^8.2.2",
        "husky": "^9.1.7",
        "lint-staged": "^16.2.4",
        "prettier": "^3.6.2"
    },
    "workspaces": [
        "backend",
        "frontend",
        "shared-types"
    ],
    "engines": {
        "node": ">=18.0.0",
        "pnpm": ">=8.0.0"
    },
    "packageManager": "pnpm@8.15.0",
    "pnpm": {
        "overrides": {
            "semver": "^7.5.2",
            "esbuild": "^0.25.0"
        }
    },
    "lint-staged": {
        "configFile": ".lintstagedrc.js"
    }
}
