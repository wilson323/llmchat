{
    "name":  "llmchat",
    "version":  "1.0.0",
    "private":  true,
    "description":  "LLMChat - 多智能体切换聊天应用",
    "scripts":  {
                    "dev":  "concurrently \"pnpm run backend:dev\" \"pnpm run frontend:dev\"",
                    "backend:dev":  "cd backend \u0026\u0026 pnpm run dev",
                    "frontend:dev":  "cd frontend \u0026\u0026 pnpm run dev",
                    "build":  "pnpm run backend:build \u0026\u0026 pnpm run frontend:build",
                    "backend:build":  "cd backend \u0026\u0026 pnpm run build",
                    "frontend:build":  "cd frontend \u0026\u0026 pnpm run build",
                    "frontend:preview":  "cd frontend \u0026\u0026 pnpm run preview",
                    "start":  "cd backend \u0026\u0026 pnpm start",
                    "test":  "pnpm run backend:test \u0026\u0026 pnpm run frontend:test",
                    "backend:test":  "cd backend \u0026\u0026 pnpm test",
                    "frontend:test":  "cd frontend \u0026\u0026 pnpm run test:run",
                    "lint":  "pnpm run backend:lint \u0026\u0026 pnpm run frontend:lint",
                    "lint:fix":  "pnpm run backend:lint:fix \u0026\u0026 pnpm run frontend:lint:fix",
                    "backend:lint":  "cd backend \u0026\u0026 pnpm run lint",
                    "backend:lint:fix":  "cd backend \u0026\u0026 pnpm run lint:fix",
                    "frontend:lint":  "cd frontend \u0026\u0026 pnpm run lint",
                    "frontend:lint:fix":  "cd frontend \u0026\u0026 pnpm run lint:fix",
                    "type-check":  "pnpm --filter @llmchat/shared-types build \u0026\u0026 pnpm run frontend:type-check",
                    "frontend:type-check":  "cd frontend \u0026\u0026 pnpm run type-check",
                    "install:all":  "pnpm install",
                    "test:e2e":  "playwright test",
                    "test:e2e:ui":  "playwright test --ui",
                    "test:e2e:debug":  "playwright test --debug",
                    "prepare":  "husky install",
                    "security:audit":  "./scripts/security-audit.sh",
                    "security:check":  "node scripts/pre-commit-security-check.js",
                    "security:config":  "cd backend \u0026\u0026 ts-node src/scripts/secure-config-manager.ts",
                    "enterprise:fix":  "cd backend \u0026\u0026 ts-node src/scripts/enterprise-code-fixer.ts",
                    "enterprise:fix:interactive":  "cd backend \u0026\u0026 ts-node src/scripts/enterprise-code-fixer.ts --mode fix",
                    "enterprise:fix:auto":  "cd backend \u0026\u0026 ts-node src/scripts/enterprise-code-fixer.ts --mode auto-fix",
                    "pre-commit":  "lint-staged \u0026\u0026 pnpm run pre-commit-quality",
                    "pre-commit-check":  "pnpm run type-check \u0026\u0026 pnpm run lint \u0026\u0026 pnpm run security:check",
                    "quality-check":  "node scripts/quality-check.mjs",
                    "quality-gates":  "node scripts/enhanced-quality-gates.js",
                    "quality-gates:pre-commit":  "node scripts/enhanced-quality-gates.js --pre-commit",
                    "quality-gates:strict":  "node scripts/enhanced-quality-gates.js --strict",
                    "quality-check:pre-commit":  "node scripts/quality-check.mjs --pre-commit",
                    "quality-monitor":  "node scripts/quality-monitor.js",
                    "quality-trend":  "node scripts/quality-trend-tracker.js",
                    "quality-report":  "node scripts/quality-monitor.js \u0026\u0026 node scripts/quality-trend-tracker.js",
                    "quality-gates:pre-push":  "node scripts/enhanced-quality-gates.js --pre-push",
                    "quality-gates:ci":  "node scripts/enhanced-quality-gates.js --ci-mode",
                    "typescript:quality-gates":  "node scripts/typescript-quality-gates.js",
                    "typescript:quality-gates:strict":  "node scripts/typescript-quality-gates.js --mode strict",
                    "typescript:quality-gates:basic":  "node scripts/typescript-quality-gates.js --mode basic",
                    "typescript:quality-gates:ci":  "node scripts/typescript-quality-gates.js --no-report --quiet",
                    "quality-gates:thresholds":  "node scripts/enhanced-quality-gates.js --thresholds",
                    "quality-dashboard":  "node scripts/quality-dashboard.js",
                    "quality-dashboard:serve":  "node scripts/quality-dashboard.js --serve",
                    "quality-metrics":  "node scripts/quality-metrics.js",
                    "quality-metrics:ci":  "node scripts/quality-metrics.js --ci",
                    "pre-commit-quality":  "node scripts/pre-commit-quality-check.js",
                    "validate:quality":  "pnpm run type-check \u0026\u0026 pnpm run lint \u0026\u0026 pnpm run test \u0026\u0026 pnpm run security:audit \u0026\u0026 pnpm run quality-metrics",
                    "quality-dashboard:watch":  "node scripts/quality-dashboard.js --serve --watch",
                    "quality-improvement":  "node scripts/continuous-improvement.js",
                    "quality-improvement:update":  "node scripts/continuous-improvement.js --update",
                    "quality-improvement:report":  "node scripts/continuous-improvement.js --report-only",
                    "security:sanitize":  "pnpm run security:audit \u0026\u0026 pnpm run security:check",
                    "enterprise:rules":  "node -e \"console.log(\u0027📋 企业级规则: 禁止正则表达式代码替换，使用AST操作\u0027); console.log(\u0027📖 详情: .enterprise-code-rules.md\u0027)\"",
                    "enterprise:validate":  "node -e \"try { const config = require(\u0027./.enterprise-code-fixer.config.json\u0027); console.log(\u0027✅ 企业级配置验证通过\u0027); } catch(e) { console.error(\u0027❌ 配置验证失败:\u0027, e.message); process.exit(1); }\"",
                    "validate:docs":  "node scripts/spec-validation/validate-consistency.js \u0026\u0026 node scripts/spec-validation/check-coverage.js \u0026\u0026 node scripts/spec-validation/detect-ambiguity.js \u0026\u0026 node scripts/spec-validation/verify-references.js",
                    "validate:docs:consistency":  "node scripts/spec-validation/validate-consistency.js",
                    "validate:docs:coverage":  "node scripts/spec-validation/check-coverage.js",
                    "validate:docs:ambiguity":  "node scripts/spec-validation/detect-ambiguity.js",
                    "validate:docs:references":  "node scripts/spec-validation/verify-references.js"
                },
    "devDependencies":  {
                            "@playwright/test":  "^1.40.0",
                            "chalk":  "^5.6.2",
                            "concurrently":  "^8.2.2",
                            "husky":  "^9.1.7",
                            "lint-staged":  "^16.2.3",
                            "prettier":  "^3.6.2"
                        },
    "workspaces":  [
                       "backend",
                       "frontend",
                       "shared-types"
                   ],
    "engines":  {
                    "node":  "\u003e=18.0.0",
                    "pnpm":  "\u003e=8.0.0"
                },
    "packageManager":  "pnpm@8.15.0",
    "lint-staged":  {
                        "configFile":  ".lintstagedrc.js"
                    }
}
