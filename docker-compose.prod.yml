# ========================================
# LLMChat 生产环境 Docker Compose 配置
# 包含：应用、数据库、Redis、Nginx
# ========================================

version: '3.8'

services:
  # ========================================
  # PostgreSQL 数据库
  # ========================================
  postgres:
    image: postgres:15-alpine
    container_name: llmchat-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-llmchat}
      POSTGRES_PASSWORD: ${DB_PASSWORD:?请设置DB_PASSWORD环境变量}
      POSTGRES_DB: ${DB_NAME:-llmchat}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./backend/src/db/migrations:/docker-entrypoint-initdb.d:ro
    networks:
      - llmchat-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-llmchat}"]
      interval: 10s
      timeout: 5s
      retries: 5
    command:
      - "postgres"
      - "-c"
      - "max_connections=200"
      - "-c"
      - "shared_buffers=256MB"
      - "-c"
      - "effective_cache_size=1GB"
      - "-c"
      - "maintenance_work_mem=64MB"
      - "-c"
      - "checkpoint_completion_target=0.9"
      - "-c"
      - "wal_buffers=16MB"
      - "-c"
      - "default_statistics_target=100"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "effective_io_concurrency=200"
      - "-c"
      - "work_mem=4MB"

  # ========================================
  # Redis 缓存
  # ========================================
  redis:
    image: redis:7-alpine
    container_name: llmchat-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:?请设置REDIS_PASSWORD环境变量} --maxmemory 2gb --maxmemory-policy allkeys-lru
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    networks:
      - llmchat-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # ========================================
  # LLMChat 应用（3实例负载均衡）
  # ========================================
  app-1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: llmchat-app-1
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER:-llmchat}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME:-llmchat}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost}
      RATE_LIMIT_MAX_REQUESTS: 1000
      OTEL_ENABLED: ${OTEL_ENABLED:-false}
      SENTRY_ENABLED: ${SENTRY_ENABLED:-false}
      SENTRY_DSN: ${SENTRY_DSN:-}
    volumes:
      - ./config:/app/config:ro
      - app-logs-1:/app/backend/log
    networks:
      - llmchat-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  app-2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: llmchat-app-2
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER:-llmchat}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME:-llmchat}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost}
      RATE_LIMIT_MAX_REQUESTS: 1000
      OTEL_ENABLED: ${OTEL_ENABLED:-false}
      SENTRY_ENABLED: ${SENTRY_ENABLED:-false}
      SENTRY_DSN: ${SENTRY_DSN:-}
    volumes:
      - ./config:/app/config:ro
      - app-logs-2:/app/backend/log
    networks:
      - llmchat-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  app-3:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: llmchat-app-3
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER:-llmchat}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME:-llmchat}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost}
      RATE_LIMIT_MAX_REQUESTS: 1000
      OTEL_ENABLED: ${OTEL_ENABLED:-false}
      SENTRY_ENABLED: ${SENTRY_ENABLED:-false}
      SENTRY_DSN: ${SENTRY_DSN:-}
    volumes:
      - ./config:/app/config:ro
      - app-logs-3:/app/backend/log
    networks:
      - llmchat-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ========================================
  # Nginx 负载均衡器
  # ========================================
  nginx:
    image: nginx:alpine
    container_name: llmchat-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
      - nginx-logs:/var/log/nginx
    networks:
      - llmchat-network
    depends_on:
      - app-1
      - app-2
      - app-3
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  llmchat-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  app-logs-1:
  app-logs-2:
  app-logs-3:
  nginx-logs:
